{"version":3,"sources":["components/AddCategory.js","components/GifGridItem.js","helpers/getGifts.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","String","inputValue","setInputValue","handleOnSubmit","e","preventDefault","trim","length","categories","onSubmit","value","onChange","target","onClick","GifGridItem","props","image","title","url","className","src","alt","getGifts","category","a","encodeURI","fetch","resp","json","data","gifts","map","img","id","images","downsized_medium","GifGrid","loading","state","setState","useEffect","then","useFetchGifs","GifExpertApp","item","ReactDOM","render","document","getElementById"],"mappings":"mMAmCeA,MAhCf,YAAyC,IAAlBC,EAAiB,EAAjBA,cAAiB,EACAC,mBAASC,QADT,mBAC7BC,EAD6B,KACjBC,EADiB,KAK9BC,EAAiB,SAAAC,GACnBA,EAAEC,iBACEJ,EAAWK,OAAOC,OAAS,IAC3BT,GAAc,SAAAU,GAAU,OAAKP,GAAL,mBAAoBO,OAC5CN,EAAc,MAUtB,OACI,uBAAMO,SAAUN,EAAhB,UACI,uBAAOO,MAAOT,EAAYU,SAlBX,SAAC,GAAD,IAAaD,EAAb,EAAGE,OAAUF,MAAb,OAA2BR,EAAcQ,MAmBxD,wBAAQG,QAASV,EAAjB,yBACA,wBAAQU,QAVO,SAAAT,GACnBA,EAAEC,iBACFP,EAAc,IACdI,EAAc,KAOV,2BCNGY,EAjBK,SAAAC,GAAU,IAAD,EACFA,EAAMC,MAArBC,EADiB,EACjBA,MAAOC,EADU,EACVA,IAEf,OACI,sBAAKC,UAAU,wCAAf,UACI,qBAAKC,IAAKF,EAAKG,IAAKJ,IACnBA,GACG,4BAAIA,Q,uBCVdK,EAAQ,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACPN,EADO,0DACkDO,UAAUF,GAD5D,sDAEMG,MAAMR,GAFZ,cAEPS,EAFO,gBAGUA,EAAKC,OAHf,uBAGLC,EAHK,EAGLA,KAEFC,EAAQD,EAAKE,KAAI,SAAAC,GAAG,YAAK,CAC3BC,GAAID,EAAIC,GACRhB,MAAK,UAAEe,EAAIf,aAAN,aAAE,EAAWX,OAClBY,IAAKc,EAAIE,OAAOC,iBAAiBjB,QARxB,kBAWNY,GAXM,4CAAH,sDC0BCM,EArBC,SAAC,GAAkB,IAAhBb,EAAe,EAAfA,SAAe,ECFN,SAACA,GAAc,IAAD,EACZxB,mBAAS,CAC/B8B,KAAM,GACNQ,SAAS,IAHyB,mBAC/BC,EAD+B,KACxBC,EADwB,KAetC,OATAC,qBAAU,WACNlB,EAASC,GAAUkB,MAAK,SAAAP,GACpBK,EAAS,CACLV,KAAMK,EACNG,SAAS,SAGlB,CAACd,IAEGe,EDX0BI,CAAanB,GAAtCc,EAFsB,EAEtBA,QAAcH,EAFQ,EAEbL,KAEjB,OACI,qCACI,6BAAKN,IACJc,GAAW,4CACZ,qBAAKlB,UAAU,YAAf,SAEQe,EAAOH,KAAI,SAAAf,GAAK,OAAK,cAAC,EAAD,CAA4BA,MAAOA,GAAjBA,EAAMiB,aEalDU,MAxBf,WAAyB,IAAD,EAEgB5C,mBAAS,CAAC,kBAF1B,mBAEbS,EAFa,KAEDV,EAFC,KASpB,OACI,qCACI,8CACA,cAAC,EAAD,CAAaA,cAAeA,IAC5B,uBAGA,6BAEKU,EAAWuB,KAAI,SAAAa,GAAI,OAAK,cAAC,EAAD,CAAoBrB,SAAUqB,GAAhBA,Y,MCjBvDC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.3715b02a.chunk.js","sourcesContent":["import React, { useState } from 'react'\nimport PropTypes from 'prop-types'\n\nfunction AddCategory({ setCategories }) {\n    const [inputValue, setInputValue] = useState(String);\n\n    const handleOnChange = ({ target: { value } }) => setInputValue(value);\n\n    const handleOnSubmit = e => {\n        e.preventDefault();\n        if (inputValue.trim().length > 0) {\n            setCategories(categories => [inputValue, ...categories]);\n            setInputValue('');\n        }\n    };\n\n    const handleCleanAll = e => {\n        e.preventDefault();\n        setCategories([]);\n        setInputValue('');\n    };\n\n    return (\n        <form onSubmit={handleOnSubmit} >\n            <input value={inputValue} onChange={handleOnChange} />\n            <button onClick={handleOnSubmit} >AddCategory</button>\n            <button onClick={handleCleanAll} >Clean All</button>\n        </form>\n    )\n}\n\nAddCategory.propTypes = {\n    setCategories: PropTypes.func.isRequired\n}\n\nexport default AddCategory;","import React from 'react'\nimport PropTypes from 'prop-types'\n\nconst GifGridItem = props => {\n    const { title, url } = props.image;\n\n    return (\n        <div className=\"card animate__animated animate__pulse\" >\n            <img src={url} alt={title} />\n            {title && (\n                <p>{title}</p>\n            )}\n        </div>\n    )\n}\n\nGifGridItem.propTypes = {\n    image: PropTypes.object\n}\n\nexport default GifGridItem\n","const getGifts = async (category) => {\n    const url = `https://api.giphy.com/v1/gifs/search?limit=10&q=${encodeURI(category)}&api_key=9OM3910xbqsUqcXTKmx61vQQxuEQgj0c`;\n    const resp = await fetch(url);\n    const { data } = await resp.json();\n\n    const gifts = data.map(img => ({\n        id: img.id,\n        title: img.title?.trim(),\n        url: img.images.downsized_medium.url\n    }));\n\n    return gifts;\n}\n\nexport { getGifts };","import React from 'react'\nimport PropTypes from 'prop-types'\nimport GifGridItem from './GifGridItem';\nimport { useFetchGifs } from '../hooks/useFetchGifs';\n\nconst GifGrid = ({ category }) => {\n\n    const { loading, data:images } = useFetchGifs(category);\n\n    return (\n        <>\n            <h3>{category}</h3>\n            {loading && <p>Loading ...</p>}\n            <div className=\"card-grid\">\n                {\n                    images.map(image => (<GifGridItem key={image.id} image={image} />))\n                }\n            </div>\n        </>\n    )\n}\n\nGifGrid.propTypes = {\n    category: PropTypes.string\n}\n\nexport default GifGrid\n","import { useEffect, useState } from \"react\"\nimport { getGifts } from \"../helpers/getGifts\";\n\nexport const useFetchGifs = (category) => {\n    const [state, setState] = useState({\n        data: [],\n        loading: true\n    });\n\n    useEffect(() => {\n        getGifts(category).then(images => {\n            setState({\n                data: images,\n                loading: false\n            });\n        });\n    }, [category])\n\n    return state;\n}\n","import React, { useState } from 'react';\nimport AddCategory from './components/AddCategory';\nimport GifGrid from './components/GifGrid';\n\nfunction GifExpertApp() {\n\n    const [categories, setCategories] = useState(['One Punch Man']);\n\n    /* const handleOnclick = (inputValue) => {\n        const newCat = [...categories, inputValue];\n        setCategories(newCat);\n    } */\n\n    return (\n        <>\n            <h2>GifExpertApp</h2>\n            <AddCategory setCategories={setCategories} />\n            <hr />\n\n            {/* <button onClick={handleOnclick}>Agregar</button> */}\n            <ol>\n                {/* Se recomienda que el key no sea el index */}\n                {categories.map(item => (<GifGrid key={item} category={item} />))}\n            </ol>\n        </>\n    );\n}\n\nexport default GifExpertApp;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GifExpertApp from './GifExpertApp';\nimport './index.css';\n\nReactDOM.render(\n  <GifExpertApp />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}